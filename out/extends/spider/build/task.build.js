!function(e){var t={};function r(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.w={},r(r.s=37)}([function(e,t){e.exports=require("sequelize")},function(e,t,r){const a=r(28)();e.exports=class{constructor(){this.dataModels=a.models,this.db=a}}},function(e,t,r){const a=r(1),o=r(10)();e.exports=(e=>new class extends a{constructor(e){super(),this.option=e}async getOrders(e,t){e=e||$config.pagination.page,t=t||$config.pagination.psize;var r=$common.getPageForSql(e,t);try{let t=await this.dataModels.order.findAndCountAll({include:[{model:this.dataModels.user,as:"user",include:{model:this.dataModels.userBankInfo,as:"bankInfo"}},{model:this.dataModels.orderDetail,as:"orderDetail",include:{model:this.dataModels.sku,as:"sku"}}],where:{},limit:r.limit,offset:r.offset,order:[["id","desc"]]});for(let e in t.rows){t.rows[e].payTime?t.rows[e].setDataValue("_payTime",$common.dateFormate(t.rows[e].payTime,"yyyy-MM-dd hh:mm:ss")):t.rows[e].setDataValue("_payTime","未付款");let r=0;for(let a of t.rows[e].orderDetail)r+=Number(a.num)*Number(a.sku.price);t.rows[e].setDataValue("total",r);for(let r in t.rows[e].orderDetail)t.rows[e].orderDetail[r].setDataValue("_endTime",$common.dateFormate(t.rows[e].orderDetail[r].endTime,"yyyy-MM-dd hh:mm:ss"))}return t}catch(e){throw e}}async setOrder(e,t){try{if(e.id)return t?await this.dataModels.order.update(e,{where:{id:e.id},transaction:t}):await this.dataModels.order.update(e,{where:{id:e.id}});e.status=0;let r=await this.dataModels.order.create(e);for(let t in e.detail)e.detail[t].orderId=r.id;return await this.dataModels.orderDetail.bulkCreate(e.detail),r}catch(e){throw e}}async setOrderDetailEndTime(e){try{if(!e)throw new Error("setOrderDetailEndTime 数据不能为空");let t=await this.getOrderById(e.orderId);if(!t)throw new Error("setOrderDetailEndTime 订单获取失败");let r=t.payTime;if(!r)throw new Error("setOrderDetailEndTime 支付时间获取失败");for(let e of t.orderDetail){console.log("endtime ",r,e.sku.skuType);let t=r+30*JSON.parse(e.sku.skuType.other).time*24*60*60*1e3;await this.dataModels.orderDetail.update({endTime:t},{where:{id:e.id}})}return"name"}catch(e){}}async setOrderDetailEndTimeTransaction(e,t){try{if(!t)throw new Error("transaction obj is empty");if(!e)throw new Error("setOrderDetailEndTime 数据不能为空");let a=await this.getOrderById(e.orderId);if(!a)throw new Error("setOrderDetailEndTime 订单获取失败");let o=e.payTime;if(!o)throw new Error("setOrderDetailEndTime 支付时间获取失败");var r=[];for(let e of a.orderDetail){let a=o+30*JSON.parse(e.sku.skuType.other).time*24*60*60*1e3;r.push(this.dataModels.orderDetail.update({endTime:a},{where:{id:e.id}},{transaction:t}))}return r}catch(e){throw e}}async setOrderPayOkTransaction(e,t){try{var r=e.orderId,a=e.payType,o=this;if(!r||!a)throw new Error("订单id或者支付类型 不能为空");var s=[];if(t){var n=(new Date).getTime();s.push(this.setOrder({payType:a,id:r,status:1,payTime:n},t));let e=await this.setOrderDetailEndTimeTransaction({orderId:r,payTime:n},t);for(let t of e)s.push(t);return s}return await this.db.transaction(async e=>{var t=(new Date).getTime();s.push(o.setOrder({payType:a,id:r,status:1,payTime:t},e));let n=await o.setOrderDetailEndTimeTransaction({orderId:r,payTime:t},e);for(let e of n)s.push(e);return Promise.all(s)})}catch(e){throw e}}async getOrderList(e){try{let t=await this.dataModels.order.findAndCountAll({include:{model:this.dataModels.orderDetail,as:"orderDetail",include:{model:this.dataModels.sku,as:"sku"}},where:{userId:e,status:{$ne:-1}},order:[["id","desc"]]});for(let e in t.rows)if(t.rows[e].payTime){t.rows[e].setDataValue("_payTime",$common.dateFormate(t.rows[e].payTime,"yyyy-MM-dd hh:mm:ss"));for(let r in t.rows[e].orderDetail)t.rows[e].orderDetail[r].setDataValue("_endTime",$common.dateFormate(t.rows[e].orderDetail[r].endTime,"yyyy-MM-dd hh:mm:ss"))}else t.rows[e].setDataValue("_payTime","未付款");return t}catch(e){throw e}}async getPayedOrderList(){try{let e=await this.dataModels.order.findAndCountAll({include:{model:this.dataModels.orderDetail,as:"orderDetail",include:{model:this.dataModels.sku,as:"sku",include:{model:this.dataModels.skuType,as:"skuType"}}},where:{status:1}});for(let t in e.rows)if(e.rows[t].payTime){e.rows[t].setDataValue("_payTime",$common.dateFormate(e.rows[t].payTime,"yyyy-MM-dd hh:mm:ss"));for(let r in e.rows[t].orderDetail)e.rows[t].orderDetail[r].setDataValue("_endTime",$common.dateFormate(e.rows[t].orderDetail[r].endTime,"yyyy-MM-dd hh:mm:ss"))}else e.rows[t].setDataValue("_payTime","未付款");return e}catch(e){throw e}}async getOrderById(e){try{if(!e)return null;let t=await this.dataModels.order.findOne({include:{model:this.dataModels.orderDetail,as:"orderDetail",include:{model:this.dataModels.sku,as:"sku",include:{model:this.dataModels.skuType,as:"skuType"}}},where:{id:e}});if(!t)return null;let r=0;for(let e of t.orderDetail)r+=Number(e.num)*Number(e.sku.price);return t.setDataValue("total",r),t}catch(e){throw e}}async getActiveOrders(e){try{if(!e)throw new Error("userid empty");return await this.dataModels.order.findAll({where:{userid:e,status:1}})}catch(e){throw e}}async delTimeOutOrder(e){try{e=e||10;let a=await this.dataModels.order.findAll({where:{status:0}});var t=(new Date).getTime(),r=60*e*1e3;if(a)for(let e of a){let a=new Date(e.createdAt).getTime();t-a>r&&(console.log("该订单失效了",t-a," - ",e.id),await this.delOrderTransaction(e.id))}return!0}catch(e){throw e}}async delOrderTransaction(e,t){try{if(!e)throw new Error("orderId can not null in Order.model.delOrderTransaction");var r=this;if(t){var a=[];let s=await r.dataModels.order.findOne({where:{id:e},include:{model:r.dataModels.orderDetail,as:"orderDetail",include:{model:r.dataModels.sku,as:"sku"}}},{transaction:t});for(let e of s.orderDetail)-1!=e.sku.num&&a.push(await o.addSkuNum({id:e.sku.id,num:e.num},t));return a.push(r.dataModels.order.destroy({where:{id:e}},{transaction:t})).push(r.dataModels.orderDetail.destroy({where:{orderId:e}},{transaction:t})),Promise.all(a)}return await this.db.transaction(async t=>{let a=await r.dataModels.order.findOne({where:{id:e},include:{model:r.dataModels.orderDetail,as:"orderDetail",include:{model:r.dataModels.sku,as:"sku"}}},{transaction:t});if(!a||0==a.orderDetail.length)throw new Error("无法删除订单，订单详情读取失败");for(let e of a.orderDetail)-1!=e.sku.num&&await o.addSkuNum({id:e.sku.id,num:e.num},t);return await r.dataModels.order.destroy({where:{id:e}},{transaction:t}),await r.dataModels.orderDetail.destroy({where:{orderId:e}},{transaction:t})})}catch(e){throw e}}}(e))},function(e,t,r){const a=r(1),o=r(4)(),s=r(2)();e.exports=(e=>new class extends a{constructor(e){super(),this.option=e}async getIncomeList(e){try{if(!e)return null;let t=await this.dataModels.incomeLog.findAll({where:{userid:e},order:[["id","desc"]]}),r=$common.dateFormate(null,"MM-dd");for(let e in t){let a=$common.dateFormate(t[e].time,"MM-dd");a==r&&(a="今日"),t[e].setDataValue("_date",a)}return t}catch(e){throw e}}async getUserBankInfo(e){try{return e?await this.dataModels.userBankInfo.findOne({where:{userid:e}}):null}catch(e){throw e}}async addUser(e){try{if(!e)throw new Error("data empty");return await this.getUserByOpenId(e.openid)||await this.dataModels.user.create({openid:e.openid,headimg:e.headimgurl,money:0,name:e.nickname,status:1,roleId:1,pid:e.pid})}catch(e){throw e}}async setUser(e){try{if(!e||!e.id)throw new Error("data empty");return await this.dataModels.user.update(e,{where:{id:e.id}})}catch(e){throw e}}async getUserByOpenId(e){try{if(!e)throw new Error("openid empty");return await this.dataModels.user.findOne({where:{openid:e}})}catch(e){throw e}}async setOrder(e){try{if(e.status=0,e.id)return await this.dataModels.order.update(e,{where:{id:e.id}});let t=await this.dataModels.order.create(e);for(let r in e.detail)e.detail[r].orderId=t.id;return await this.dataModels.orderDetail.bulkCreate(e.detail),t}catch(e){throw e}}async setUserBankInfo(e){try{if(!e)throw new Error("银行卡信息不完整");return await this.dataModels.userBankInfo.upsert(e)}catch(e){throw e}}async getUserAllAsset(e){try{if(!e)return null;let r=await this.dataModels.user.findOne({where:{id:e}}),a=Number(r.money),o=await s.getActiveOrders(e);var t=0;for(let e of o){let r=await s.getOrderById(e.id);r&&(t+=Number(r.dataValues.total))}return{total:t+a}}catch(e){throw e}}async getUserById(e){try{return e?await this.dataModels.user.findOne({where:{id:e}}):null}catch(e){throw e}}async subMoney(e){try{if(!e)throw new Error("User model subMoney error,data is empty");var t=this.dataModels.user;return await this.db.transaction(function(r){return o.addLog(e.log,r).then(a=>{let o=Number(e.user.money)-Number(e.subNum);return console.log(e,"data info"),t.update({money:o},{where:{id:e.user.id},transaction:r})})})}catch(e){throw e}}async subMoneyTransaction(e,t){try{if(!e)throw new Error("User model subMoneyTransaction error,data obj is empty");var r=await this.getUserById(e.userId);if(t){let a=[o.addLog(e.log,t)],s=Number(r.money)-Number(e.subNum);return a.push(this.dataModels.user.update({money:s},{where:{id:e.userId},transaction:t})),a}return await this.dataModels.transaction(t=>{let a=[o.addLog(e.log,t)],s=Number(r.money)-Number(e.subNum);return a.push(this.dataModels.user.update({money:s},{where:{id:e.userId},transaction:t})),Promise.all(a)})}catch(e){throw e}}async addMoneyTransaction(e,t){try{if(!e)throw new Error("User model subMoneyTransaction error,data obj is empty");var r=await this.getUserById(e.userId);if(!r)throw new Error("无法增加账户资金，因为用户信息获取失败");if(t){let a=[o.addLog(e.log,t)],s=Number(r.money)+Number(e.addNum);return a.push(this.dataModels.user.update({money:s},{where:{id:e.userId},transaction:t})),a}return await this.dataModels.transaction(t=>{let a=[o.addLog(e.log,t)],s=Number(r.money)+Number(e.addNum);return a.push(this.dataModels.user.update({money:s},{where:{id:e.userId},transaction:t})),Promise.all(a)})}catch(e){throw e}}}(e))},function(e,t,r){const a=r(1);e.exports=(e=>new class extends a{constructor(e){super(),this.option=e}async getArticles(e,t){try{e=e||$config.pagination.page,t=t||$config.pagination.psize;var r=$common.getPageForSql(e,t);return console.log(r,"pagess"),await this.dataModels.article.findAndCountAll({limit:r.limit,offset:r.offset,order:[["sort","desc"]]})}catch(e){throw e}}async addLog(e,t){try{if(!(e.userId&&e.type&&e.money&&e.direction))throw console.log(e),new Error("资金变动日志 数据不完整");return t?await this.dataModels.balanceChangeLog.create(e,{transaction:t}):await this.dataModels.balanceChangeLog.create(e)}catch(e){throw e}}async getLastestArticle(){try{return await this.dataModels.article.findOne({where:{status:1},order:[["sort","desc"]],limit:1})}catch(e){throw e}}async getLastestPublishedArticle(){try{return await this.dataModels.article.findOne({order:[["sort","desc"]],where:{status:1},limit:1})}catch(e){throw e}}async delArticle(e){try{if(!e)throw new Error("article.model delArticle,无法删除文章，因为文章id为空");let t=this.getGoodsCacheKey(e);return await $cache.delete(t),await this.dataModels.article.destroy({where:{id:e}})}catch(e){throw e}}async getColumnByName(e){try{return await this.dataModels.column.findOne({where:{name:e}})}catch(e){throw e}}async getUserById(e){try{return e?await this.dataModels.user.findOne({where:{id:e}}):null}catch(e){throw e}}async getArticleBySort(e){try{return await this.dataModels.article.findOne({where:{sort:e}})}catch(e){throw e}}async getLast(e){try{if(!e)return null;let t=await this.getArticleById(e);return t?await this.dataModels.article.findOne({where:{sort:{$lt:t.sort},status:1},limit:1,order:[["sort","desc"]]}):null}catch(e){throw e}}async getNext(e){try{if(!e)return null;let t=await this.getArticleById(e);return t?await this.dataModels.article.findOne({where:{sort:{$gt:t.sort},status:1},order:[["sort"]],limit:1}):null}catch(e){throw e}}}(e))},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("log4js")},function(e,t,r){const a=r(7);r(6),a.configure({appenders:{everything:{type:"dateFile",filename:process.cwd()+"/logs/all-the-logs.log",maxLogSize:1048576,backups:3,compress:!0}},categories:{default:{appenders:["everything"],level:"debug"}}});const o=a.getLogger("log4jslog");e.exports={error:e=>{o.error(e)},trace:e=>{o.trace(e)},info:e=>{o.info(e)},trace:e=>{o.trace(e)},debug:e=>{o.debug(e)},warn:e=>{o.warn(e)},fatal:e=>{o.fatal(e)}}},function(e,t,r){const a=r(1),o=r(4)(),s=(r(2)(),r(3)());e.exports=(e=>new class extends a{constructor(e){super(),this.option=e}async getIncomeList(e){try{if(!e)return null;let t=await this.dataModels.incomeLog.findAll({where:{userid:e},order:[["id","desc"]]}),r=$common.dateFormate(null,"MM-dd");for(let e in t){let a=$common.dateFormate(t[e].time,"MM-dd");a==r&&(a="今日"),t[e].setDataValue("_date",a)}return t}catch(e){throw e}}async getIncomeLogByIncomeNum(e){try{if(!e)throw new Error("incomeNum 不能为空");return await this.dataModels.incomeLog.findOne({where:{incomeNum:e}})}catch(e){throw e}}async addIncome(e){try{if(!(e.incomeNum&&e.userId&&e.orderId&&e.detailId&&e.income))throw new Error("addIncome 数据不完整");if(Number(e.income)<=0)throw new Error("收益不能为负数或0");var t=this;return await this.db.transaction(function(r){let a={userId:e.userId,type:"income",money:e.income,direction:"add",remark:"程序自动添加用户订单收益"};return o.addLog(a,r).then(a=>{let o=Number(e.user.money)+Number(e.income);return t.dataModels.user.update({money:o},{where:{id:e.user.id},transaction:r})}).then(()=>t.dataModels.incomeLog.create({userId:e.userId,income:e.income,orderDetailId:e.detailId,time:new Date,incomeNum:e.incomeNum},{transaction:r}))})}catch(e){throw e}}async addIncomeTransactiondata(e){try{if(!(e.incomeNum&&e.userId&&e.orderId&&e.detailId&&e.income))throw new Error("addIncome 数据不完整");if(Number(e.income)<=0)throw new Error("收益不能为负数或0");var t=this;return await this.db.transaction(async function(r){let a={userId:e.userId,type:"income",money:e.income,direction:"add",remark:"程序自动添加用户订单收益"},o=await s.addMoneyTransaction({addNum:e.income,userId:e.userId,log:a},r);return o.push(t.dataModels.incomeLog.create({userId:e.userId,income:e.income,orderDetailId:e.detailId,time:new Date,incomeNum:e.incomeNum},{transaction:r})),Promise.all(o)})}catch(e){throw e}}}(e))},function(e,t,r){const a=r(1);e.exports=(e=>new class extends a{constructor(e){super(),this.option=e}getSKUCacheKey(e){try{if(!e)throw new Error("无法获取文章缓存的key，因为文章id为空");return`sku-${e}`}catch(e){throw e}}async getArticles(e,t){try{e=e||$config.pagination.page,t=t||$config.pagination.psize;var r=$common.getPageForSql(e,t);return console.log(r,"pagess"),await this.dataModels.article.findAndCountAll({limit:r.limit,offset:r.offset,order:[["sort","desc"]]})}catch(e){throw e}}async setSKU(e){try{if(e.id){let t=this.getSKUCacheKey(e.id);return await $cache.delete(t),await this.dataModels.goods.update(e,{where:{id:e.id}})}return await this.dataModels.goods.create(e)}catch(e){throw e}}async getLastestArticle(){try{return await this.dataModels.article.findOne({where:{status:1},order:[["sort","desc"]],limit:1})}catch(e){throw e}}async getLastestPublishedArticle(){try{return await this.dataModels.article.findOne({order:[["sort","desc"]],where:{status:1},limit:1})}catch(e){throw e}}async delArticle(e){try{if(!e)throw new Error("article.model delArticle,无法删除文章，因为文章id为空");let t=this.getSKUCacheKey(e);return await $cache.delete(t),await this.dataModels.article.destroy({where:{id:e}})}catch(e){throw e}}async getSkuById(e){try{if(!e)throw new Error("sku id 不能为空");return await this.dataModels.sku.findOne({where:{id:e}})}catch(e){throw e}}async subSkuNum(e){try{if(!e.id)throw new Error("sku id 不能为空");let t=await this.dataModels.sku.findOne({where:{id:e.id}});if(!t)throw new Error("规格获取失败");let r=Number(t.num)-Number(e.num);if(r<0)throw new Error(`${t.name}库存不足`);return await this.dataModels.sku.update({num:r},{where:{id:e.id}})}catch(e){throw e}}async addSkuNum(e,t){try{if(!e.id)throw new Error("sku id 不能为空");let r=await this.dataModels.sku.findOne({where:{id:e.id}});if(!r)throw new Error("规格获取失败");if(Number(r.num)<0)throw new Error("无法添加库存，因为该商品的可能不计库存");let a=Number(r.num)+Number(e.num);if(a<0)throw new Error(`${r.name}库存不足`);return t?await this.dataModels.sku.update({num:a},{where:{id:e.id}},{transaction:t}):await this.dataModels.sku.update({num:a},{where:{id:e.id}})}catch(e){throw e}}async getSKUByGoodsId(e){try{if(!e)return null;var t=this.getSKUCacheKey(e);if(1!=$config.debug){let e=await $cache.get(t);if(e)return e}let r=await this.dataModels.sku.findAll({include:{model:this.dataModels.skuType,as:"skuType"},where:{goodsId:e},order:[["sort"]]});return await $cache.set(t,r,$config.cacheDefaultExpire),r}catch(e){throw e}}}(e))},function(e,t,r){const a=r(0);e.exports={name:"config",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},key:a.STRING(128),value:a.TEXT,remark:a.TEXT}}},function(e,t,r){const a=r(0);e.exports={name:"balanceChangeLog",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},userId:a.INTEGER,type:a.STRING(128),direction:a.STRING(128),money:a.DECIMAL(10,2),remark:a.TEXT}}},function(e,t,r){const a=r(0);e.exports={name:"userBankInfo",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},userId:a.INTEGER,telNum:a.STRING(128),bankName:a.STRING(128),userName:a.STRING(128),account:a.TEXT}}},function(e,t,r){const a=r(0);e.exports={name:"getCash",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},userId:a.INTEGER,money:a.DECIMAL(10,2),reback:a.TEXT,applyTime:a.DATE,finishedTime:a.DATE,status:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"msgType",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128)}}},function(e,t,r){const a=r(0);e.exports={name:"userMsg",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},userId:a.INTEGER,title:a.STRING(128),content:a.TEXT,typeId:a.INTEGER,status:a.BOOLEAN,time:a.DATE}}},function(e,t,r){const a=r(0);e.exports={name:"redPacket",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128),price:a.DECIMAL(10,2),issue:a.STRING(128),userId:a.INTEGER,status:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"incomeLog",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},userId:a.INTEGER,orderDetailId:a.INTEGER,income:a.DECIMAL(10,2),incomeNum:a.STRING(128),time:a.DATE}}},function(e,t,r){const a=r(0);e.exports={name:"orderDetail",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},orderId:a.INTEGER,skuId:a.INTEGER,endTime:a.INTEGER,num:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"order",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},orderNum:a.STRING(128),userId:a.INTEGER,time:a.DATE,payTime:a.INTEGER,payType:a.STRING(128),status:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"skuType",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128),desc:a.TEXT,other:a.TEXT}}},function(e,t,r){const a=r(0);e.exports={name:"sku",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128),price:a.DECIMAL(10,2),num:a.INTEGER,goodsId:a.INTEGER,sort:a.INTEGER,unit:a.STRING(128),img:a.STRING(512),status:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"goods",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128),content:a.TEXT,catId:a.INTEGER,imgs:a.TEXT,place:a.STRING(512),status:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"cate",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128),content:a.TEXT,imgs:a.TEXT,status:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"role",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128)}}},function(e,t,r){const a=r(0);e.exports={name:"user",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(128),pwd:a.STRING(64),roleId:a.INTEGER,headimg:a.TEXT,money:a.DECIMAL(10,2),openid:a.STRING(64),status:a.INTEGER,pid:a.INTEGER}}},function(e,t,r){const a=r(0);e.exports={name:"admin",body:{id:{type:a.INTEGER,primaryKey:!0,autoIncrement:!0},name:a.STRING(100),pwd:a.STRING(32),roleId:a.INTEGER}}},function(e,t,r){const a=r(0);var o=null,s=[];s.push(r(27)),s.push(r(26)),s.push(r(25)),s.push(r(24)),s.push(r(23)),s.push(r(22)),s.push(r(21)),s.push(r(20)),s.push(r(19)),s.push(r(18)),s.push(r(17)),s.push(r(16)),s.push(r(15)),s.push(r(14)),s.push(r(13)),s.push(r(12)),s.push(r(11)),e.exports=function(){try{if(o)return o;var e=$config.db;if(!e||!e.db||!e.uname)throw new Error("数据库尚未初始化");o=new a(e.db,e.uname,e.pwd,{timestamps:!1,host:e.host,dialect:"mysql",timezone:"+08:00",pool:{max:5,min:0,idle:3e4}});for(let e of s)o.define(e.name,e.body);return o.sync({force:!1}),(t=o).models.sku.belongsTo(t.models.skuType,{as:"skuType"}),t.models.order.hasMany(t.models.orderDetail,{as:"orderDetail"}),t.models.order.belongsTo(t.models.user,{as:"user"}),t.models.user.hasOne(t.models.userBankInfo,{as:"bankInfo",foreignKey:"userId"}),t.models.orderDetail.belongsTo(t.models.sku,{as:"sku"}),t}catch(e){throw"初始化数据库失败"+e}var t}},function(e,t,r){const a=r(2)(),o=r(9)(),s=r(3)(),n=r(1);var i=(e,t,r)=>`${e}-${t}-${r}-${$common.dateFormate(null,"yyyy-MM-dd")}`;e.exports=(e=>new class extends n{constructor(e){super(),this.option=e}async checkOrderIncome(){let e=await a.getPayedOrderList();for(let a of e.rows){let e=(new Date).getTime();if(Number(a.payTime)+60*$taskConfig.incomeTime*60*1e3>e)console.log("未到收益计算时间 ",a.id);else if(a.orderDetail.length<=0){let e="订单详情异常，订单为已支付，但订单详情为空 orderId"+a.id;$logger.error({path:"task Process checkOrderIncome "+e,err:err})}else{var t=a.userId,r=a.id;if(t)for(let e of a.orderDetail){let n=e.sku,d=JSON.parse(n.skuType.other);if(!d)throw new Error(`获取sku info 失败 orderId :${a.id},skuId:${n.id}`);let c=(n.price*e.num*Number(d.rate)/360).toFixed(2),l=i(t,r,e.id);if(await o.getIncomeLogByIncomeNum(l)){console.log(`orderid :${r},detailId:${e.id},incomeNum:${l},今日已经结算`);continue}let u=await s.getUserById(t);await o.addIncomeTransactiondata({userId:t,orderId:r,income:c,detailId:e.id,time:new Date,incomeNum:l,user:u}),console.log("添加完成")}else $logger.error({path:"task Process checkOrderIncome 订单id："+a.id+"用户id为空",err:err})}}}async delTimeoutOrders(){try{await a.delTimeOutOrder($taskConfig.orderTimeout)}catch(e){throw e}}}(e))},function(e,t){for(var r=[],a=0;a<256;++a)r[a]=(a+256).toString(16).substr(1);e.exports=function(e,t){var a=t||0,o=r;return o[e[a++]]+o[e[a++]]+o[e[a++]]+o[e[a++]]+"-"+o[e[a++]]+o[e[a++]]+"-"+o[e[a++]]+o[e[a++]]+"-"+o[e[a++]]+o[e[a++]]+"-"+o[e[a++]]+o[e[a++]]+o[e[a++]]+o[e[a++]]+o[e[a++]]+o[e[a++]]}},function(e,t){e.exports=require("crypto")},function(e,t,r){var a=r(31);e.exports=function(){return a.randomBytes(16)}},function(e,t,r){var a,o,s=r(32),n=r(30),i=0,d=0;e.exports=function(e,t,r){var c=t&&r||0,l=t||[],u=(e=e||{}).node||a,m=void 0!==e.clockseq?e.clockseq:o;if(null==u||null==m){var h=s();null==u&&(u=a=[1|h[0],h[1],h[2],h[3],h[4],h[5]]),null==m&&(m=o=16383&(h[6]<<8|h[7]))}var y=void 0!==e.msecs?e.msecs:(new Date).getTime(),w=void 0!==e.nsecs?e.nsecs:d+1,p=y-i+(w-d)/1e4;if(p<0&&void 0===e.clockseq&&(m=m+1&16383),(p<0||y>i)&&void 0===e.nsecs&&(w=0),w>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");i=y,d=w,o=m;var f=(1e4*(268435455&(y+=122192928e5))+w)%4294967296;l[c++]=f>>>24&255,l[c++]=f>>>16&255,l[c++]=f>>>8&255,l[c++]=255&f;var g=y/4294967296*1e4&268435455;l[c++]=g>>>8&255,l[c++]=255&g,l[c++]=g>>>24&15|16,l[c++]=g>>>16&255,l[c++]=m>>>8|128,l[c++]=255&m;for(var I=0;I<6;++I)l[c+I]=u[I];return t||n(l)}},function(e,t,r){const a=r(33);r(5),e.exports={_error(e){throw`common.lib error: ${e}`},writeLog(e){e&&logModel.create({content:JSON.stringify(e),type:1})},getPageForSql(e,t){return e&&t||this._error("getPageForSql，page 或者psize 不能为空"),e=parseInt(e),--e<0&&(e=1),{limit:parseInt(t),offset:parseInt(e)*parseInt(t)}},getRandomString:()=>a(),formateDate:(e,t)=>a(),isArray:e=>"[object Array]"==Object.prototype.toString.call(e),isAdminLogin:async e=>!!await $req.session("admin")||(e&&e.deny("管理员尚未登录"),!1),dateFormate:(e,t)=>(Date.prototype.Format=function(e){var t={"M+":this.getMonth()+1,"d+":this.getDate(),"h+":this.getHours(),"m+":this.getMinutes(),"s+":this.getSeconds(),"q+":Math.floor((this.getMonth()+3)/3),S:this.getMilliseconds()};for(var r in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(this.getFullYear()+"").substr(4-RegExp.$1.length))),t)new RegExp("("+r+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?t[r]:("00"+t[r]).substr((""+t[r]).length)));return e},e?new Date(e).Format(t):(new Date).Format(t)),arrMerge(e){let t=[];for(let r of e)for(let e of r)t.push(e);return t}}},function(e,t){e.exports=require("jsonminify")},function(e,t,r){const a=r(35),o=r(5);global.$taskConfig=JSON.parse(a(o.readFileSync("./taskProcess.config.json").toString())),1==$taskConfig.debug?global.$config=JSON.parse(a(o.readFileSync("../config.json").toString())):global.$config=JSON.parse(a(o.readFileSync("./config.json").toString())),global.$common=r(34);const s=r(29)();async function n(){await s.checkOrderIncome(),await s.delTimeoutOrders()}global.$logger=r(8),n(),setInterval(async()=>{try{n()}catch(e){console.log("check order incomme error",e),$logger.error({path:"task Process error ",err:e})}},1e3*$taskConfig.incomeCheckTime)},function(e,t,r){e.exports=r(36)}]);